/* tslint:disable */
/* eslint-disable */
/**
 * Stryke API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntersectionAmountTokenDto
 */
export interface IntersectionAmountTokenDto {
    /**
     * 
     * @type {string}
     * @memberof IntersectionAmountTokenDto
     */
    amount: string;
    /**
     * Address of the ERC20 token
     * @type {string}
     * @memberof IntersectionAmountTokenDto
     */
    address: string;
    /**
     * Decimals of the ERC20 token
     * @type {string}
     * @memberof IntersectionAmountTokenDto
     */
    decimals: string;
    /**
     * Symbol of the ERC20 token
     * @type {string}
     * @memberof IntersectionAmountTokenDto
     */
    symbol: string;
}

/**
 * Check if a given object implements the IntersectionAmountTokenDto interface.
 */
export function instanceOfIntersectionAmountTokenDto(value: object): value is IntersectionAmountTokenDto {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('decimals' in value) || value['decimals'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    return true;
}

export function IntersectionAmountTokenDtoFromJSON(json: any): IntersectionAmountTokenDto {
    return IntersectionAmountTokenDtoFromJSONTyped(json, false);
}

export function IntersectionAmountTokenDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntersectionAmountTokenDto {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'address': json['address'],
        'decimals': json['decimals'],
        'symbol': json['symbol'],
    };
}

export function IntersectionAmountTokenDtoToJSON(json: any): IntersectionAmountTokenDto {
    return IntersectionAmountTokenDtoToJSONTyped(json, false);
}

export function IntersectionAmountTokenDtoToJSONTyped(value?: IntersectionAmountTokenDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'address': value['address'],
        'decimals': value['decimals'],
        'symbol': value['symbol'],
    };
}

