/* tslint:disable */
/* eslint-disable */
/**
 * Stryke API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DepositResponseDtoReserved } from './DepositResponseDtoReserved';
import {
    DepositResponseDtoReservedFromJSON,
    DepositResponseDtoReservedFromJSONTyped,
    DepositResponseDtoReservedToJSON,
    DepositResponseDtoReservedToJSONTyped,
} from './DepositResponseDtoReserved';
import type { Token0Token1 } from './Token0Token1';
import {
    Token0Token1FromJSON,
    Token0Token1FromJSONTyped,
    Token0Token1ToJSON,
    Token0Token1ToJSONTyped,
} from './Token0Token1';
import type { Token0Token1Composition } from './Token0Token1Composition';
import {
    Token0Token1CompositionFromJSON,
    Token0Token1CompositionFromJSONTyped,
    Token0Token1CompositionToJSON,
    Token0Token1CompositionToJSONTyped,
} from './Token0Token1Composition';
import type { Strikes } from './Strikes';
import {
    StrikesFromJSON,
    StrikesFromJSONTyped,
    StrikesToJSON,
    StrikesToJSONTyped,
} from './Strikes';

/**
 * 
 * @export
 * @interface DepositPositionsResponseDto
 */
export interface DepositPositionsResponseDto {
    /**
     * 
     * @type {Strikes}
     * @memberof DepositPositionsResponseDto
     */
    readonly strikes: Strikes;
    /**
     * 
     * @type {Token0Token1}
     * @memberof DepositPositionsResponseDto
     */
    readonly tokens: Token0Token1;
    /**
     * 
     * @type {Token0Token1Composition}
     * @memberof DepositPositionsResponseDto
     */
    readonly earned: Token0Token1Composition;
    /**
     * 
     * @type {Token0Token1Composition}
     * @memberof DepositPositionsResponseDto
     */
    readonly liquidity: Token0Token1Composition;
    /**
     * 
     * @type {Token0Token1Composition}
     * @memberof DepositPositionsResponseDto
     */
    readonly withdrawable: Token0Token1Composition;
    /**
     * 
     * @type {DepositResponseDtoReserved}
     * @memberof DepositPositionsResponseDto
     */
    readonly reserved: DepositResponseDtoReserved;
}

/**
 * Check if a given object implements the DepositPositionsResponseDto interface.
 */
export function instanceOfDepositPositionsResponseDto(value: object): value is DepositPositionsResponseDto {
    if (!('strikes' in value) || value['strikes'] === undefined) return false;
    if (!('tokens' in value) || value['tokens'] === undefined) return false;
    if (!('earned' in value) || value['earned'] === undefined) return false;
    if (!('liquidity' in value) || value['liquidity'] === undefined) return false;
    if (!('withdrawable' in value) || value['withdrawable'] === undefined) return false;
    if (!('reserved' in value) || value['reserved'] === undefined) return false;
    return true;
}

export function DepositPositionsResponseDtoFromJSON(json: any): DepositPositionsResponseDto {
    return DepositPositionsResponseDtoFromJSONTyped(json, false);
}

export function DepositPositionsResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DepositPositionsResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'strikes': StrikesFromJSON(json['strikes']),
        'tokens': Token0Token1FromJSON(json['tokens']),
        'earned': Token0Token1CompositionFromJSON(json['earned']),
        'liquidity': Token0Token1CompositionFromJSON(json['liquidity']),
        'withdrawable': Token0Token1CompositionFromJSON(json['withdrawable']),
        'reserved': DepositResponseDtoReservedFromJSON(json['reserved']),
    };
}

export function DepositPositionsResponseDtoToJSON(json: any): DepositPositionsResponseDto {
    return DepositPositionsResponseDtoToJSONTyped(json, false);
}

export function DepositPositionsResponseDtoToJSONTyped(value?: Omit<DepositPositionsResponseDto, 'strikes'|'tokens'|'earned'|'liquidity'|'withdrawable'|'reserved'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

