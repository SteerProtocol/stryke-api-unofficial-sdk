/* tslint:disable */
/* eslint-disable */
/**
 * Stryke API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PurchasePositionMetaHandlerDto } from './PurchasePositionMetaHandlerDto';
import {
    PurchasePositionMetaHandlerDtoFromJSON,
    PurchasePositionMetaHandlerDtoFromJSONTyped,
    PurchasePositionMetaHandlerDtoToJSON,
    PurchasePositionMetaHandlerDtoToJSONTyped,
} from './PurchasePositionMetaHandlerDto';

/**
 * 
 * @export
 * @interface PurchasePositionMetaDto
 */
export interface PurchasePositionMetaDto {
    /**
     * 
     * @type {string}
     * @memberof PurchasePositionMetaDto
     */
    readonly tokenId: string;
    /**
     * 
     * @type {number}
     * @memberof PurchasePositionMetaDto
     */
    readonly expiry: number;
    /**
     * 
     * @type {Array<PurchasePositionMetaHandlerDto>}
     * @memberof PurchasePositionMetaDto
     */
    readonly handlers: Array<PurchasePositionMetaHandlerDto>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PurchasePositionMetaDto
     */
    readonly liquidities: Array<string>;
}

/**
 * Check if a given object implements the PurchasePositionMetaDto interface.
 */
export function instanceOfPurchasePositionMetaDto(value: object): value is PurchasePositionMetaDto {
    if (!('tokenId' in value) || value['tokenId'] === undefined) return false;
    if (!('expiry' in value) || value['expiry'] === undefined) return false;
    if (!('handlers' in value) || value['handlers'] === undefined) return false;
    if (!('liquidities' in value) || value['liquidities'] === undefined) return false;
    return true;
}

export function PurchasePositionMetaDtoFromJSON(json: any): PurchasePositionMetaDto {
    return PurchasePositionMetaDtoFromJSONTyped(json, false);
}

export function PurchasePositionMetaDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PurchasePositionMetaDto {
    if (json == null) {
        return json;
    }
    return {
        
        'tokenId': json['tokenId'],
        'expiry': json['expiry'],
        'handlers': ((json['handlers'] as Array<any>).map(PurchasePositionMetaHandlerDtoFromJSON)),
        'liquidities': json['liquidities'],
    };
}

export function PurchasePositionMetaDtoToJSON(json: any): PurchasePositionMetaDto {
    return PurchasePositionMetaDtoToJSONTyped(json, false);
}

export function PurchasePositionMetaDtoToJSONTyped(value?: Omit<PurchasePositionMetaDto, 'tokenId'|'expiry'|'handlers'|'liquidities'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

