/* tslint:disable */
/* eslint-disable */
/**
 * Stryke API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TokenDto } from './TokenDto';
import {
    TokenDtoFromJSON,
    TokenDtoFromJSONTyped,
    TokenDtoToJSON,
    TokenDtoToJSONTyped,
} from './TokenDto';

/**
 * 
 * @export
 * @interface OptionMarketsResponseDtoV1
 */
export interface OptionMarketsResponseDtoV1 {
    /**
     * 
     * @type {boolean}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly deprecated: boolean;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly address: string;
    /**
     * 
     * @type {TokenDto}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly callToken: TokenDto;
    /**
     * 
     * @type {TokenDto}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly putToken: TokenDto;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly primePool: string;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly dpFee: string;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly optionsPricing: string;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly tokenURIFetcher: string;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly totalPremium: string;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly totalVolume: string;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly totalFees: string;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly pairName: string;
    /**
     * 
     * @type {string}
     * @memberof OptionMarketsResponseDtoV1
     */
    readonly ticker: string;
}

/**
 * Check if a given object implements the OptionMarketsResponseDtoV1 interface.
 */
export function instanceOfOptionMarketsResponseDtoV1(value: object): value is OptionMarketsResponseDtoV1 {
    if (!('deprecated' in value) || value['deprecated'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('callToken' in value) || value['callToken'] === undefined) return false;
    if (!('putToken' in value) || value['putToken'] === undefined) return false;
    if (!('primePool' in value) || value['primePool'] === undefined) return false;
    if (!('dpFee' in value) || value['dpFee'] === undefined) return false;
    if (!('optionsPricing' in value) || value['optionsPricing'] === undefined) return false;
    if (!('tokenURIFetcher' in value) || value['tokenURIFetcher'] === undefined) return false;
    if (!('totalPremium' in value) || value['totalPremium'] === undefined) return false;
    if (!('totalVolume' in value) || value['totalVolume'] === undefined) return false;
    if (!('totalFees' in value) || value['totalFees'] === undefined) return false;
    if (!('pairName' in value) || value['pairName'] === undefined) return false;
    if (!('ticker' in value) || value['ticker'] === undefined) return false;
    return true;
}

export function OptionMarketsResponseDtoV1FromJSON(json: any): OptionMarketsResponseDtoV1 {
    return OptionMarketsResponseDtoV1FromJSONTyped(json, false);
}

export function OptionMarketsResponseDtoV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): OptionMarketsResponseDtoV1 {
    if (json == null) {
        return json;
    }
    return {
        
        'deprecated': json['deprecated'],
        'address': json['address'],
        'callToken': TokenDtoFromJSON(json['callToken']),
        'putToken': TokenDtoFromJSON(json['putToken']),
        'primePool': json['primePool'],
        'dpFee': json['dpFee'],
        'optionsPricing': json['optionsPricing'],
        'tokenURIFetcher': json['tokenURIFetcher'],
        'totalPremium': json['totalPremium'],
        'totalVolume': json['totalVolume'],
        'totalFees': json['totalFees'],
        'pairName': json['pairName'],
        'ticker': json['ticker'],
    };
}

export function OptionMarketsResponseDtoV1ToJSON(json: any): OptionMarketsResponseDtoV1 {
    return OptionMarketsResponseDtoV1ToJSONTyped(json, false);
}

export function OptionMarketsResponseDtoV1ToJSONTyped(value?: Omit<OptionMarketsResponseDtoV1, 'deprecated'|'address'|'callToken'|'putToken'|'primePool'|'dpFee'|'optionsPricing'|'tokenURIFetcher'|'totalPremium'|'totalVolume'|'totalFees'|'pairName'|'ticker'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

