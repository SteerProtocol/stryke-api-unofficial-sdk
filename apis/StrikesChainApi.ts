/* tslint:disable */
/* eslint-disable */
/**
 * Stryke API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  StrikesChainResponseDto,
} from '../models/index';
import {
    StrikesChainResponseDtoFromJSON,
    StrikesChainResponseDtoToJSON,
} from '../models/index';

export interface StrikesChainControllerGetStrikesChainRequest {
    optionMarket: string;
    chainId: StrikesChainControllerGetStrikesChainChainIdEnum;
    callsReach: StrikesChainControllerGetStrikesChainCallsReachEnum;
    putsReach: StrikesChainControllerGetStrikesChainPutsReachEnum;
}

/**
 * 
 */
export class StrikesChainApi extends runtime.BaseAPI {

    /**
     * Get strikes chain or options chain of a options market
     */
    async strikesChainControllerGetStrikesChainRaw(requestParameters: StrikesChainControllerGetStrikesChainRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<StrikesChainResponseDto>>> {
        if (requestParameters['optionMarket'] == null) {
            throw new runtime.RequiredError(
                'optionMarket',
                'Required parameter "optionMarket" was null or undefined when calling strikesChainControllerGetStrikesChain().'
            );
        }

        if (requestParameters['chainId'] == null) {
            throw new runtime.RequiredError(
                'chainId',
                'Required parameter "chainId" was null or undefined when calling strikesChainControllerGetStrikesChain().'
            );
        }

        if (requestParameters['callsReach'] == null) {
            throw new runtime.RequiredError(
                'callsReach',
                'Required parameter "callsReach" was null or undefined when calling strikesChainControllerGetStrikesChain().'
            );
        }

        if (requestParameters['putsReach'] == null) {
            throw new runtime.RequiredError(
                'putsReach',
                'Required parameter "putsReach" was null or undefined when calling strikesChainControllerGetStrikesChain().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['optionMarket'] != null) {
            queryParameters['optionMarket'] = requestParameters['optionMarket'];
        }

        if (requestParameters['chainId'] != null) {
            queryParameters['chainId'] = requestParameters['chainId'];
        }

        if (requestParameters['callsReach'] != null) {
            queryParameters['callsReach'] = requestParameters['callsReach'];
        }

        if (requestParameters['putsReach'] != null) {
            queryParameters['putsReach'] = requestParameters['putsReach'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/clamm/strikes-chain`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(StrikesChainResponseDtoFromJSON));
    }

    /**
     * Get strikes chain or options chain of a options market
     */
    async strikesChainControllerGetStrikesChain(requestParameters: StrikesChainControllerGetStrikesChainRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<StrikesChainResponseDto>> {
        const response = await this.strikesChainControllerGetStrikesChainRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const StrikesChainControllerGetStrikesChainChainIdEnum = {
    NUMBER_5000: 5000,
    NUMBER_42161: 42161
} as const;
export type StrikesChainControllerGetStrikesChainChainIdEnum = typeof StrikesChainControllerGetStrikesChainChainIdEnum[keyof typeof StrikesChainControllerGetStrikesChainChainIdEnum];
/**
 * @export
 */
export const StrikesChainControllerGetStrikesChainCallsReachEnum = {
    NUMBER_100: 100,
    NUMBER_200: 200
} as const;
export type StrikesChainControllerGetStrikesChainCallsReachEnum = typeof StrikesChainControllerGetStrikesChainCallsReachEnum[keyof typeof StrikesChainControllerGetStrikesChainCallsReachEnum];
/**
 * @export
 */
export const StrikesChainControllerGetStrikesChainPutsReachEnum = {
    NUMBER_100: 100,
    NUMBER_200: 200
} as const;
export type StrikesChainControllerGetStrikesChainPutsReachEnum = typeof StrikesChainControllerGetStrikesChainPutsReachEnum[keyof typeof StrikesChainControllerGetStrikesChainPutsReachEnum];
