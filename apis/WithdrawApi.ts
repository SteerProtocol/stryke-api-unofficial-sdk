/* tslint:disable */
/* eslint-disable */
/**
 * Stryke API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  WithdrawHistoryResponseDto,
} from '../models/index';
import {
    WithdrawHistoryResponseDtoFromJSON,
    WithdrawHistoryResponseDtoToJSON,
} from '../models/index';

export interface WithdrawControllerGetHistoryRequest {
    chainId: WithdrawControllerGetHistoryChainIdEnum;
    user: string;
    first: WithdrawControllerGetHistoryFirstEnum;
    skip: WithdrawControllerGetHistorySkipEnum;
    pool: string;
}

/**
 * 
 */
export class WithdrawApi extends runtime.BaseAPI {

    /**
     * Get history of withdraws from CLAMM for a user
     */
    async withdrawControllerGetHistoryRaw(requestParameters: WithdrawControllerGetHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<WithdrawHistoryResponseDto>>> {
        if (requestParameters['chainId'] == null) {
            throw new runtime.RequiredError(
                'chainId',
                'Required parameter "chainId" was null or undefined when calling withdrawControllerGetHistory().'
            );
        }

        if (requestParameters['user'] == null) {
            throw new runtime.RequiredError(
                'user',
                'Required parameter "user" was null or undefined when calling withdrawControllerGetHistory().'
            );
        }

        if (requestParameters['first'] == null) {
            throw new runtime.RequiredError(
                'first',
                'Required parameter "first" was null or undefined when calling withdrawControllerGetHistory().'
            );
        }

        if (requestParameters['skip'] == null) {
            throw new runtime.RequiredError(
                'skip',
                'Required parameter "skip" was null or undefined when calling withdrawControllerGetHistory().'
            );
        }

        if (requestParameters['pool'] == null) {
            throw new runtime.RequiredError(
                'pool',
                'Required parameter "pool" was null or undefined when calling withdrawControllerGetHistory().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['chainId'] != null) {
            queryParameters['chainId'] = requestParameters['chainId'];
        }

        if (requestParameters['user'] != null) {
            queryParameters['user'] = requestParameters['user'];
        }

        if (requestParameters['first'] != null) {
            queryParameters['first'] = requestParameters['first'];
        }

        if (requestParameters['skip'] != null) {
            queryParameters['skip'] = requestParameters['skip'];
        }

        if (requestParameters['pool'] != null) {
            queryParameters['pool'] = requestParameters['pool'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/clamm/withdraw/history`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(WithdrawHistoryResponseDtoFromJSON));
    }

    /**
     * Get history of withdraws from CLAMM for a user
     */
    async withdrawControllerGetHistory(requestParameters: WithdrawControllerGetHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<WithdrawHistoryResponseDto>> {
        const response = await this.withdrawControllerGetHistoryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const WithdrawControllerGetHistoryChainIdEnum = {
    NUMBER_5000: 5000,
    NUMBER_42161: 42161
} as const;
export type WithdrawControllerGetHistoryChainIdEnum = typeof WithdrawControllerGetHistoryChainIdEnum[keyof typeof WithdrawControllerGetHistoryChainIdEnum];
/**
 * @export
 */
export const WithdrawControllerGetHistoryFirstEnum = {
    NUMBER_100: 100,
    NUMBER_200: 200,
    NUMBER_300: 300
} as const;
export type WithdrawControllerGetHistoryFirstEnum = typeof WithdrawControllerGetHistoryFirstEnum[keyof typeof WithdrawControllerGetHistoryFirstEnum];
/**
 * @export
 */
export const WithdrawControllerGetHistorySkipEnum = {
    NUMBER_0: 0,
    NUMBER_100: 100,
    NUMBER_200: 200
} as const;
export type WithdrawControllerGetHistorySkipEnum = typeof WithdrawControllerGetHistorySkipEnum[keyof typeof WithdrawControllerGetHistorySkipEnum];
